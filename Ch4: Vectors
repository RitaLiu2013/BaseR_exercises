## Exericse in ch.4

## 4.1
rep(c(2.7,8.0,3.0),2)

## 4.2
seq(0.0,2.0,by=0.4)

## 4.3
primes = c(2,3,5,7,11,13,17,19,23,29)
composites=c(4,6,8,9,10)
primes[composites]


## 4.4
seq(3,28,by=11)%%4 # 3 2 1

## 4.5
seq(0.0, 2.0, length.out=5)

## 4.6
x=c(2,0,-5,7)
x[-2.8]
# as an index, -2.8 will turcate to -2. 
# it means that the 2nd element in this vector
# is omitted, so only 1st, 3rd and 4th element left

## 4.7
rep(0:2, 1:3) # 0 1 1 2 2 2
3^rep(0:2, 1:3) # 1 3 3 9 9 9

## 4.8
rep(1:4, 1)
result <- c()
for (n in 0:3){
    #vector1 <- rep(1:4, 1)+n
    vector2 <- 1:4 + n
    result <- c(result, vector2)
    print(result)
}
# such, it produces 4 outputs.

result <- c()
for (n in 0:3){
    vector2 <- 1:4 + n
    result <- c(result, vector2)
}
result  # ← this gives you the final combined vector
# if we write "result" out of the for loop




## 4.9
seq(0,4, by=0.05)
# alternativly
(0:80)*0.05

## 4.10
x=1:8
x
x[6:8]
x[c(6:8)]
x[-c(-6:-8)]
# they yield the same result

## 4.11
n_values <- 1:10
print(n_values^n_values) # create a 1^1, 2^2, 3^3,...10^10


outer(1:10, 1:10, `^`) # create a grid for value n^n


## 4.12
1:6+7:9
# i.e. 1:3+7:9 and 4:6+7:9

## 4.14
x <- 1:100
x[100:1] # reverse the full rank
x[]

## 4.15
nominator <- 1:50
denominator <-  3^seq(0,49,each=1)
denominator
x <- nominator/denominator
print(x)
2/3==x[2]


## 4.16
x_values <- 1:100
for (i in x_values){
    y=2*x_values[i]+ 5*x_values[i+1]-8/x_values[i+2]
    print(y)
}


## 4.17
a <- 1:100
a+a^2







